{
    "Resources": {
        "AccessKeysRotated": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "access-keys-rotated",
                "InputParameters": {
                    "maxAccessKeyAge": "90"
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ACCESS_KEYS_ROTATED"
                }
            }
        },
        "AcmCertificateExpirationCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "acm-certificate-expiration-check",
                "InputParameters": {
                    "daysToExpiration": "90"
                },
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::ACM::Certificate"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ACM_CERTIFICATE_EXPIRATION_CHECK"
                }
            }
        },
        "AlbHttpToHttpsRedirectionCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "alb-http-to-https-redirection-check",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK"
                }
            }
        },
        "ApiGwCacheEnabledAndEncrypted": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "api-gw-cache-enabled-and-encrypted",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::ApiGateway::Stage"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "API_GW_CACHE_ENABLED_AND_ENCRYPTED"
                }
            }
        },
        "ApiGwExecutionLoggingEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "api-gw-execution-logging-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::ApiGateway::Stage",
                        "AWS::ApiGatewayV2::Stage"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "API_GW_EXECUTION_LOGGING_ENABLED"
                }
            }
        },
        "CloudTrailCloudWatchLogsEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloud-trail-cloud-watch-logs-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED"
                }
            }
        },
        "CloudTrailEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloudtrail-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUD_TRAIL_ENABLED"
                }
            }
        },
        "CloudTrailEncryptionEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloud-trail-encryption-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUD_TRAIL_ENCRYPTION_ENABLED"
                }
            }
        },
        "CloudTrailLogFileValidationEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloud-trail-log-file-validation-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED"
                }
            }
        },
        "CloudtrailS3DataeventsEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloudtrail-s3-dataevents-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUDTRAIL_S3_DATAEVENTS_ENABLED"
                }
            }
        },
        "CloudwatchAlarmActionCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloudwatch-alarm-action-check",
                "InputParameters": {
                    "alarmActionRequired": "true",
                    "insufficientDataActionRequired": "true",
                    "okActionRequired": "false"
                },
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::CloudWatch::Alarm"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUDWATCH_ALARM_ACTION_CHECK"
                }
            }
        },
        "CloudwatchLogGroupEncrypted": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "cloudwatch-log-group-encrypted",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CLOUDWATCH_LOG_GROUP_ENCRYPTED"
                }
            }
        },
        "CodebuildProjectEnvvarAwscredCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "codebuild-project-envvar-awscred-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::CodeBuild::Project"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK"
                }
            }
        },
        "CodebuildProjectSourceRepoUrlCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "codebuild-project-source-repo-url-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::CodeBuild::Project"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK"
                }
            }
        },
        "DbInstanceBackupEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "db-instance-backup-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::RDS::DBInstance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "DB_INSTANCE_BACKUP_ENABLED"
                }
            }
        },
        "DmsReplicationNotPublic": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "dms-replication-not-public",
                "Scope": {
                    "ComplianceResourceTypes": []
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "DMS_REPLICATION_NOT_PUBLIC"
                }
            }
        },
        "DynamodbPitrEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "dynamodb-pitr-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::DynamoDB::Table"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "DYNAMODB_PITR_ENABLED"
                }
            }
        },
        "EbsSnapshotPublicRestorableCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ebs-snapshot-public-restorable-check",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK"
                }
            }
        },
        "Ec2EbsEncryptionByDefault": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-ebs-encryption-by-default",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_EBS_ENCRYPTION_BY_DEFAULT"
                }
            }
        },
        "Ec2InstanceManagedBySsm": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-instance-managed-by-systems-manager",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::Instance",
                        "AWS::SSM::ManagedInstanceInventory"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_INSTANCE_MANAGED_BY_SSM"
                }
            }
        },
        "Ec2InstanceNoPublicIp": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-instance-no-public-ip",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::Instance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_INSTANCE_NO_PUBLIC_IP"
                }
            }
        },
        "Ec2ManagedinstanceAssociationComplianceStatusCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-managedinstance-association-compliance-status-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::SSM::AssociationCompliance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK"
                }
            }
        },
        "Ec2ManagedinstancePatchComplianceStatusCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-managedinstance-patch-compliance-status-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::SSM::PatchCompliance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK"
                }
            }
        },
        "Ec2SecurityGroupAttachedToEni": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-security-group-attached-to-eni",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::SecurityGroup"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_SECURITY_GROUP_ATTACHED_TO_ENI"
                }
            }
        },
        "Ec2StoppedInstance": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-stopped-instance",
                "InputParameters": {
                    "AllowedDays": "30"
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_STOPPED_INSTANCE"
                }
            }
        },
        "Ec2VolumeInuseCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-volume-inuse-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::Volume"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EC2_VOLUME_INUSE_CHECK"
                }
            }
        },
        "EfsEncryptedCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "efs-encrypted-check",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EFS_ENCRYPTED_CHECK"
                }
            }
        },
        "EipAttached": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "eip-attached",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::EIP"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EIP_ATTACHED"
                }
            }
        },
        "ElasticacheRedisClusterAutomaticBackupCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "elasticache-redis-cluster-automatic-backup-check",
                "InputParameters": {
                    "snapshotRetentionPeriod": 15
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK"
                }
            }
        },
        "ElasticsearchEncryptedAtRest": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "elasticsearch-encrypted-at-rest",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ELASTICSEARCH_ENCRYPTED_AT_REST"
                }
            }
        },
        "ElasticsearchInVpcOnly": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "elasticsearch-in-vpc-only",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ELASTICSEARCH_IN_VPC_ONLY"
                }
            }
        },
        "ElbAcmCertificateRequired": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "elb-acm-certificate-required",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::ElasticLoadBalancing::LoadBalancer"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ELB_ACM_CERTIFICATE_REQUIRED"
                }
            }
        },
        "ElbLoggingEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "elb-logging-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::ElasticLoadBalancing::LoadBalancer",
                        "AWS::ElasticLoadBalancingV2::LoadBalancer"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ELB_LOGGING_ENABLED"
                }
            }
        },
        "EmrKerberosEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "emr-kerberos-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EMR_KERBEROS_ENABLED"
                }
            }
        },
        "EmrMasterNoPublicIp": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "emr-master-no-public-ip",
                "Scope": {
                    "ComplianceResourceTypes": []
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "EMR_MASTER_NO_PUBLIC_IP"
                }
            }
        },
        "EncryptedVolumes": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "encrypted-volumes",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::Volume"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ENCRYPTED_VOLUMES"
                }
            }
        },
        "GuarddutyEnabledCentralized": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "guardduty-enabled-centralized",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "GUARDDUTY_ENABLED_CENTRALIZED"
                }
            }
        },
        "GuarddutyNonArchivedFindings": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "guardduty-non-archived-findings",
                "InputParameters": {
                    "daysHighSev": "1",
                    "daysLowSev": "30",
                    "daysMediumSev": "7"
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "GUARDDUTY_NON_ARCHIVED_FINDINGS"
                }
            }
        },
        "IamPasswordPolicy": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-password-policy",
                "InputParameters": {
                    "MaxPasswordAge": "90",
                    "MinimumPasswordLength": "14",
                    "PasswordReusePrevention": "24",
                    "RequireLowercaseCharacters": "true",
                    "RequireNumbers": "true",
                    "RequireSymbols": "true",
                    "RequireUppercaseCharacters": "true"
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_PASSWORD_POLICY"
                }
            }
        },
        "IamPolicyNoStatementsWithAdminAccess": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-policy-no-statements-with-admin-access",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::IAM::Policy"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS"
                }
            }
        },
        "IamRootAccessKeyCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-root-access-key-check",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_ROOT_ACCESS_KEY_CHECK"
                }
            }
        },
        "IamUserGroupMembershipCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-user-group-membership-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::IAM::User"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_USER_GROUP_MEMBERSHIP_CHECK"
                }
            }
        },
        "IamUserMfaEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-user-mfa-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_USER_MFA_ENABLED"
                }
            }
        },
        "IamUserNoPoliciesCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-user-no-policies-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::IAM::User"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_USER_NO_POLICIES_CHECK"
                }
            }
        },
        "IamUserUnusedCredentialsCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "iam-user-unused-credentials-check",
                "InputParameters": {
                    "maxCredentialUsageAge": "90"
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "IAM_USER_UNUSED_CREDENTIALS_CHECK"
                }
            }
        },
        "IncomingSshDisabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "restricted-ssh",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::SecurityGroup"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "INCOMING_SSH_DISABLED"
                }
            }
        },
        "InstancesInVpc": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "ec2-instances-in-vpc",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::Instance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "INSTANCES_IN_VPC"
                }
            }
        },
        "InternetGatewayAuthorizedVpcOnly": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "internet-gateway-authorized-vpc-only",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::InternetGateway"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY"
                }
            }
        },
        "KmsCmkNotScheduledForDeletion": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "kms-cmk-not-scheduled-for-deletion",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::KMS::Key"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "KMS_CMK_NOT_SCHEDULED_FOR_DELETION"
                }
            }
        },
        "LambdaFunctionPublicAccessProhibited": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "lambda-function-public-access-prohibited",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::Lambda::Function"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED"
                }
            }
        },
        "LambdaInsideVpc": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "lambda-inside-vpc",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::Lambda::Function"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "LAMBDA_INSIDE_VPC"
                }
            }
        },
        "MfaEnabledForIamConsoleAccess": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "mfa-enabled-for-iam-console-access",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS"
                }
            }
        },
        "MultiRegionCloudTrailEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "multi-region-cloudtrail-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "MULTI_REGION_CLOUD_TRAIL_ENABLED"
                }
            }
        },
        "RdsInstancePublicAccessCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "rds-instance-public-access-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::RDS::DBInstance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "RDS_INSTANCE_PUBLIC_ACCESS_CHECK"
                }
            }
        },
        "RdsSnapshotEncrypted": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "rds-snapshot-encrypted",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::RDS::DBSnapshot",
                        "AWS::RDS::DBClusterSnapshot"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "RDS_SNAPSHOT_ENCRYPTED"
                }
            }
        },
        "RdsSnapshotsPublicProhibited": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "rds-snapshots-public-prohibited",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::RDS::DBSnapshot",
                        "AWS::RDS::DBClusterSnapshot"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "RDS_SNAPSHOTS_PUBLIC_PROHIBITED"
                }
            }
        },
        "RdsStorageEncrypted": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "rds-storage-encrypted",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::RDS::DBInstance"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "RDS_STORAGE_ENCRYPTED"
                }
            }
        },
        "RedshiftClusterConfigurationCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "redshift-cluster-configuration-check",
                "InputParameters": {
                    "clusterDbEncrypted": "true",
                    "loggingEnabled": "true"
                },
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::Redshift::Cluster"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "REDSHIFT_CLUSTER_CONFIGURATION_CHECK"
                }
            }
        },
        "RedshiftClusterMaintenancesettingsCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "redshift-cluster-maintenancesettings-check",
                "InputParameters": {
                    "allowVersionUpgrade": "true"
                },
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::Redshift::Cluster"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK"
                }
            }
        },
        "RedshiftClusterPublicAccessCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "redshift-cluster-public-access-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::Redshift::Cluster"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK"
                }
            }
        },
        "RedshiftRequireTlsSsl": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "redshift-require-tls-ssl",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::Redshift::Cluster"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "REDSHIFT_REQUIRE_TLS_SSL"
                }
            }
        },
        "RestrictedIncomingTraffic": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "restricted-common-ports",
                "InputParameters": {
                    "blockedPort1": "20",
                    "blockedPort2": "21",
                    "blockedPort3": "3389",
                    "blockedPort4": "3306",
                    "blockedPort5": "4333"
                },
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::SecurityGroup"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "RESTRICTED_INCOMING_TRAFFIC"
                }
            }
        },
        "RootAccountHardwareMfaEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "root-account-hardware-mfa-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED"
                }
            }
        },
        "RootAccountMfaEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "root-account-mfa-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "ROOT_ACCOUNT_MFA_ENABLED"
                }
            }
        },
        "S3AccountLevelPublicAccessBlocks": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-account-level-public-access-blocks",
                "InputParameters": {
                    "BlockPublicAcls": "true",
                    "BlockPublicPolicy": "true",
                    "IgnorePublicAcls": "true",
                    "RestrictPublicBuckets": "true"
                },
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::AccountPublicAccessBlock"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS"
                }
            }
        },
        "S3BucketDefaultLockEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-default-lock-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_DEFAULT_LOCK_ENABLED"
                }
            }
        },
        "S3BucketLoggingEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-logging-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_LOGGING_ENABLED"
                }
            }
        },
        "S3BucketPublicReadProhibited": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-public-read-prohibited",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED"
                }
            }
        },
        "S3BucketPublicWriteProhibited": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-public-write-prohibited",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_PUBLIC_WRITE_PROHIBITED"
                }
            }
        },
        "S3BucketReplicationEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-replication-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_REPLICATION_ENABLED"
                }
            }
        },
        "S3BucketServerSideEncryptionEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-server-side-encryption-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED"
                }
            }
        },
        "S3BucketSslRequestsOnly": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-ssl-requests-only",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_SSL_REQUESTS_ONLY"
                }
            }
        },
        "S3BucketVersioningEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "s3-bucket-versioning-enabled",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::S3::Bucket"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "S3_BUCKET_VERSIONING_ENABLED"
                }
            }
        },
        "SagemakerEndpointConfigurationKmsKeyConfigured": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "sagemaker-endpoint-configuration-kms-key-configured",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED"
                }
            }
        },
        "SagemakerNotebookInstanceKmsKeyConfigured": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "sagemaker-notebook-instance-kms-key-configured",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED"
                }
            }
        },
        "SagemakerNotebookNoDirectInternetAccess": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "sagemaker-notebook-no-direct-internet-access",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS"
                }
            }
        },
        "SecretsmanagerRotationEnabledCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "secretsmanager-rotation-enabled-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::SecretsManager::Secret"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SECRETSMANAGER_ROTATION_ENABLED_CHECK"
                }
            }
        },
        "SecretsmanagerScheduledRotationSuccessCheck": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "secretsmanager-scheduled-rotation-success-check",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::SecretsManager::Secret"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK"
                }
            }
        },
        "SecurityhubEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "securityhub-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SECURITYHUB_ENABLED"
                }
            }
        },
        "SnsEncryptedKms": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "sns-encrypted-kms",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::SNS::Topic"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "SNS_ENCRYPTED_KMS"
                }
            }
        },
        "VpcDefaultSecurityGroupClosed": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "vpc-default-security-group-closed",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::SecurityGroup"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "VPC_DEFAULT_SECURITY_GROUP_CLOSED"
                }
            }
        },
        "VpcFlowLogsEnabled": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "vpc-flow-logs-enabled",
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "VPC_FLOW_LOGS_ENABLED"
                }
            }
        },
        "VpcSgOpenOnlyToAuthorizedPorts": {
            "Type": "AWS::Config::ConfigRule",
            "Properties": {
                "ConfigRuleName": "vpc-sg-open-only-to-authorized-ports",
                "Scope": {
                    "ComplianceResourceTypes": [
                        "AWS::EC2::SecurityGroup"
                    ]
                },
                "Source": {
                    "Owner": "AWS",
                    "SourceIdentifier": "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS"
                }
            }
        }
    }
}
